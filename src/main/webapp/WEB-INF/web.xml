<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>uc-web</display-name>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>uc-web</param-value>
    </context-param>

    <welcome-file-list>
        <welcome-file>/index</welcome-file>
    </welcome-file-list>

    <!--加载配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:application-context.xml,
            classpath:application-springsecurity.xml,
            classpath:service-reference-base.xml,
            classpath:service-provider-dubbo.xml,
            classpath:applicationContext.xml
        </param-value>
    </context-param>

    <!-- log4j2 -->
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:log4j2.xml</param-value>
    </context-param>

    <!-- Spring ApplicationContext载入 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 线程绑定HttpServletRequest对象 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- Spring MVC -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:application-springmvc.xml</param-value>
        </init-param>
        <init-param>
            <!--Set throwExceptionIfNoHandlerFound to 'true', when no handler map to url request,
            servlet will throw an NoHandlerFoundException to spring and catched by SimpleMappingExceptionResolve.-->
            <param-name>throwExceptionIfNoHandlerFound</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!--Add the following config when use MultipartResolver in Spring-MVC based-on Servlet 3.0-->
        <multipart-config>
            <max-file-size>50000</max-file-size>
        </multipart-config>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--以下配置解决中文乱码问题-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--Spring Security-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- SiteMesh3 -->
    <!-- 注意：SiteMesh Filter放到Spring等Filter的配置之后，否则Spring的TagLib在JSP页面上失去效用;
         另外，除了TagLib外，还能够支持在Decorator.jsp(layout.jsp)页面上支持脚本的编写。 -->
    <filter>
        <filter-name>sitemesh3</filter-name>
        <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
        <!-- 为了解决客户端(浏览器)连接不上webSocket -->
        <async-supported>true</async-supported>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>/WEB-INF/classes/application-sitemesh3.xml</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>sitemesh3</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Error pages : used to catch exceptions not handled by spring -->
    <!--<error-page>-->
    <!--<exception-type>java.lang.Throwable</exception-type>-->
    <!--<location>/errors/uncatched</location>-->
    <!--</error-page>-->

    <!-- session相关设置 -->
    <session-config>
        <!-- session超时定义，单位：分钟 -->
        <session-timeout>30</session-timeout>
        <!-- cookie相关设置 -->
        <cookie-config>
            <name>JSESSIONID</name>
            <!-- 指定cookie是否可通过客户端脚本访问 -->
            <http-only>true</http-only>
            <!-- 指定cookie是否只能通过https协议访问 -->
            <secure>false</secure>
        </cookie-config>
    </session-config>
</web-app>